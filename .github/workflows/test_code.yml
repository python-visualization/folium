name: Test Code

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

env:
  MAMBA_ROOT_PREFIX: $HOME/micromamba
  MAMBA_EXE: $(pwd)/micromamba

jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.6, 3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Install micromamba
      shell: bash -l {0}
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          wget -qO- https://micromamba.snakepit.net/api/micromamba/linux-64/latest | tar -xvj bin/micromamba
        else
          wget -qO- https://micromamba.snakepit.net/api/micromamba/osx-64/latest | tar -xvj bin/micromamba
        fi
        mv bin/micromamba ./micromamba
        ./micromamba shell init -s bash -p $HOME/micromamba
        mkdir -p $HOME/micromamba/pkgs/

    - name: Mamba create env
      shell: bash -l {0}
      run: |
        . $MAMBA_ROOT_PREFIX/etc/profile.d/mamba.sh
        ./micromamba create --yes --name TEST python=${{ matrix.python-version }} pip --file requirements.txt --file requirements-dev.txt --channel conda-forge

    - name: Install folium
      shell: bash -l {0}
      run: |
        $MAMBA_ROOT_PREFIX/envs/TEST/bin/pip install -e . --no-deps --force-reinstall

    - name: Tarball tests
      shell: bash -l {0}
      run: |
        $MAMBA_ROOT_PREFIX/envs/TEST/bin/pip wheel . -w dist --no-deps
        $MAMBA_ROOT_PREFIX/envs/TEST/bin/check-manifest --verbose
        $MAMBA_ROOT_PREFIX/envs/TEST/bin/twine check dist/*

    - name: Tests
      shell: bash -l {0}
      run: |
        $MAMBA_ROOT_PREFIX/envs/TEST/bin/pytest -vv --ignore=tests/selenium

    - name: Tests with latest branca
      shell: bash -l {0}
      run: |
        ./micromamba remove branca --yes
        $MAMBA_ROOT_PREFIX/envs/TEST/bin/pip install git+https://github.com/python-visualization/branca.git
        $MAMBA_ROOT_PREFIX/envs/TEST/bin/pytest -vv --ignore=tests/selenium

    - name: Selenium tests
      shell: bash -l {0}
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get --only-upgrade install google-chrome-stable
            sudo apt-get -yqq install chromium-chromedriver
        else
            brew update && brew cask install google-chrome chromedriver
        fi
        $MAMBA_ROOT_PREFIX/envs/TEST/bin/pytest tests/selenium -vv